name: Approve Security Labels

on:
  pull_request:
    types:
    - labeled
  issue_comment:
    types: [created]


permissions:
  pull-requests: write
  issues: write

jobs:
  approve-label:
    runs-on: ubuntu-latest
    steps:
      - name: Check if the necessary actions have been taken to approve
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const secTeam = ["DuncanRoweWV"];

            let pr;
            
            // Event is pull_request.labeled (label added)
            if (context.payload.pull_request) {
              pr = context.payload.pull_request;
            }
            else if (context.payload.issue && context.payload.issue.pull_request) {
              const prNumber = context.payload.issue.number;
              const { data } = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber
              });
            pr = data;
            }

            const labels = pr.labels.map(label => label.name);
            const hasALabel = labels.includes("A: No Security Impact");
            const hasBLabel = labels.includes("B: Security Review - light touch");
            const hasSecLabel = labels.includes("C: Threat Model") || labels.includes("D: Penetration Test");
  
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });

            let lgtmFound = false;
            let secFound = false;

            const prNumber = context.issue.number;

            if (hasALabel || hasBLabel) {
            
              // Get reviewers
              const { data: pr } = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber
              });
  
              const reviewers = pr.requested_reviewers.map(r => r.login.toLowerCase());

              lgtmFound = comments.some(comment => {
                return comment.body.toLowerCase().includes("lgtm") &&
                       reviewers.includes(comment.user.login);
              });
            }

              
            if(hasSecLabel){
              secFound = comments.some(comment => {
                return comment.body.toLowerCase().includes("lgtm") &&
                       secTeam.includes(comment.user.login);
              });
            }

            if(hasALabel && !lgtmFound) {
                core.setFailed("❌ PR has no `LGTM` comment from a reviewer");
            }
            if(hasBLabel && !lgtmFound) {
                core.setFailed("❌ PR has no `LGTM` comment from a reviewer");
            }
            if(hasSecLabel && !secFound) {
                core.setFailed("❌ PR has no `LGTM` comment found from a security team member.");
            }
              
      - name: Add 'security label' to PR
        if: success()
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: Security Approved
      - name: Remove label from PR
        uses: actions/github-script@v7
        if: success()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              let issueNumber;

              if (context.payload.pull_request && context.payload.pull_request.number) {
                issueNumber = context.payload.pull_request.number;
              } else if (context.payload.issue && context.payload.issue.number) {
                issueNumber = context.payload.issue.number;
              } 
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                name: 'Waiting for Security Approval'  // label to remove
              });
              console.log("Label removed successfully");
            } catch (error) {
              if (error.status === 404) {
                console.log("Label not found, nothing to remove");
              } else {
                throw error;
              }
            }
      
